<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="at.account" />
	<context:component-scan base-package="at.actor" />
	<context:component-scan base-package="at.supp" />
	<context:component-scan base-package="at.user" />

	<mvc:resources location="/html/" mapping="/html/**" />

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="tempSource/" p:suffix=".html" />

	<!-- <mvc:resources mapping="/**" location="tempSource/" /> -->

	<mvc:annotation-driven />

	<context:property-placeholder location="classpath:local_properties/database.properties" />

	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${database.driverClass}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="comDao" class="at.com.ComDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqls" ref="sqls" />
	</bean>




	<bean id="userDao" class="at.user.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqls" ref="sqls" />
	</bean>

	<bean id="userBizImpl" class="at.user.UserBizImpl">
		<property name="userDao" ref="userDao" />
		<property name="comDao" ref="comDao" />
	</bean>
	<bean id="userBiz" class="at.user.UserBizTx">
		<property name="transactionManager" ref="transactionManager" />
		<property name="userBiz" ref="userBizImpl" />
	</bean>

	<bean id="userCont" class="at.user.UserCont">
		<property name="userBiz" ref="userBiz" />
	</bean>




	<bean id="accountDao" class="at.account.AccountDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqls" ref="sqls" />
	</bean>

	<bean id="accountBizImpl" class="at.account.AccountBizImpl">
		<property name="accountDao" ref="accountDao" />
	</bean>
	<bean id="accountBiz" class="at.account.AccountBizTx">
		<property name="transactionManager" ref="transactionManager" />
		<property name="accountBiz" ref="accountBizImpl" />
	</bean>

	<bean id="accountCont" class="at.account.AccountCont">
		<property name="accountBiz" ref="accountBiz" />
	</bean>

	<bean id="actorDao" class="at.actor.ActorDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqls" ref="sqls" />
	</bean>



	<bean id="actorBizImpl" class="at.actor.ActorBizImpl">
		<property name="actorDao" ref="actorDao" />
	</bean>
	<bean id="actorBiz" class="at.actor.ActorBizTx">
		<property name="transactionManager" ref="transactionManager" />
		<property name="actorBiz" ref="actorBizImpl" />
	</bean>

	<bean id="actorCont" class="at.actor.ActorCont">
		<property name="actorBiz" ref="actorBiz" />
	</bean>





	<bean id="jwtMgr" class="at.supp.JwtMgr" />

	<bean id="sqls" class="at.supp.SqlServiceImpl">
		<property name="sqlMap">
			<map>
				<entry key="accountLogin" value="select usr_id, usr_email, usr_nick, usr_gender, usr_birth, usr_type, usr_stus from tb_usr where usr_email = ? and usr_pw = ?" />
				<entry key="accountEmailCount" value="select count(usr_email) from tb_usr where usr_email = ?" />
				<entry key="accountRegisterLogin" value="insert into tb_usr(usr_email, usr_pw, usr_nick, usr_gender, usr_birth, usr_type, usr_stus) values (?,?,?,?,?,?,?)" />
				<entry key="actorCreateActor" value="insert into tb_actor (ac_usr_id, ac_name, ac_memo, ac_period_from, ac_period_to, ac_worktime_unit, ac_alarm_before, ac_unpaidbreak_flag, ac_tax_rate, ac_basic_wage, ac_color_bg, ac_phone1, ac_phone2, ac_addr1_1, ac_addr1_2, ac_addr1_3, ac_stus) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)" />
				<entry key="actorRetrieveActors" value="select ac_seq, ac_usr, ac_name, ac_name, ac_phone1, ac_phone2, ac_addr1_1, ac_addr1_2, ac_addr1_3, ac_stus, DATE_FORMAT(ac_created, '%Y-%m-%d %T') as ac_created, DATE_FORMAT(ac_edited, '%Y-%m-%d %T') as ac_edited from tb_actor where ac_usr = ?" />
				<entry key="login_InsertJwTokenKey" value="insert into tb_token (tk_usr_id, tk_key, tk_stus) values (?,?,?)" />
				<entry key="autologin_retrieveJwTokenKey" value="select tk_key from tb_token where tk_seq = ? and tk_usr_id = ? and tk_stus = 'TKN_STU_01'" />
				<entry key="tkRetireveToken" value="select tk_device_type, tk_created from tb_token where tk_usr_id = ?" />
				<entry key="tkExpireToken" value="update tb_token set tk_stus = 'TKN_STU_02' where tk_usr_id = ?" />
				<entry key="getLastId" value="select last_insert_id()" />
			</map>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor> 
			<mvc:mapping path="/api/*"/> 
			<bean class="at.interceptors.ApiInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="apiInterceptor" class="at.interceptors.ApiInterceptor">
		<property name="userDao" ref="userDao" />
	</bean>
</beans>